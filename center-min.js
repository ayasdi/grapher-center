(function(){var center=function(g){g.prototype.center=function(nodeIds){var x=0,y=0,scale=1,allNodes=this.data()?this.data().nodes:null,nodes=[];if(nodeIds)for(i=0;i<nodeIds.length;i++){nodes.push(allNodes[nodeIds[i]])}else nodes=allNodes;var numNodes=nodes?nodes.length:0;if(numNodes){var minX=Infinity,maxX=-Infinity,minY=Infinity,maxY=-Infinity,width=this.props.width,height=this.props.height,pad=1.1,i;for(i=0;i<numNodes;i++){if(nodes[i].x<minX)minX=nodes[i].x;if(nodes[i].x>maxX)maxX=nodes[i].x;if(nodes[i].y<minY)minY=nodes[i].y;if(nodes[i].y>maxY)maxY=nodes[i].y}var dX=maxX-minX,dY=maxY-minY;scale=Math.min(width/dX,height/dY,2)/pad;x=(width-dX*scale)/2-minX*scale;y=(height-dY*scale)/2-minY*scale}return this.scale(scale).translate([x,y])};g.prototype.centerToPoint=function(point){var width=this.props.width,height=this.props.height,x=this.translate()[0]+width/2-point.x,y=this.translate()[1]+height/2-point.y;return this.translate([x,y])};var data=g.prototype.data,scale=g.prototype.scale,translate=g.prototype.translate;g.prototype._hasModifiedTransform=false;g.prototype.data=function(){var res=data.apply(this,arguments);if(res===this&&!this._hasModifiedTransform)this.center();return res};g.prototype.scale=function(){var res=scale.apply(this,arguments);if(res===this)this._hasModifiedTransform=true;return res};g.prototype.translate=function(){var res=translate.apply(this,arguments);if(res===this)this._hasModifiedTransform=true;return res}};if(typeof module!=="undefined"&&module.exports)module.exports=center;else center(Grapher)})();